{"version":3,"sources":["../../src/sqlFragmentFactories/createBooleanExpressionSqlFragment.js"],"names":["token","greatestParameterPosition","operator","UnexpectedStateError","values","placeholders","placeholderIndex","member","members","sqlFragment","push","sql","length","join"],"mappings":";;;;;;;AAMA;;AAGA;;AAGA;;4CAIgBA,K,EAAmCC,yB,KAAuD;AACxG,MAAID,KAAK,CAACE,QAAN,KAAmB,KAAnB,IAA4BF,KAAK,CAACE,QAAN,KAAmB,IAAnD,EAAyD;AACvD,UAAM,IAAIC,4BAAJ,CAAyB,mBAAzB,CAAN;AACD;;AAED,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,YAAY,GAAG,EAArB;AAEA,MAAIC,gBAAgB,GAAGL,yBAAvB;;AAEA,OAAK,MAAMM,MAAX,IAAqBP,KAAK,CAACQ,OAA3B,EAAoC;AAClC,QAAI,2BAAWD,MAAX,CAAJ,EAAwB;AACtB;AACA,YAAME,WAAW,GAAG,0CAA0BF,MAA1B,EAAkCD,gBAAlC,CAApB;AAEAD,MAAAA,YAAY,CAACK,IAAb,CAAkBD,WAAW,CAACE,GAA9B;AACAL,MAAAA,gBAAgB,IAAIG,WAAW,CAACL,MAAZ,CAAmBQ,MAAvC;AAEAR,MAAAA,MAAM,CAACM,IAAP,CAAY,GAAGD,WAAW,CAACL,MAA3B;AACD,KARD,MAQO;AACLC,MAAAA,YAAY,CAACK,IAAb,CAAkB,MAAM,EAAEJ,gBAA1B,EADK,CAGL;;AACAF,MAAAA,MAAM,CAACM,IAAP,CAAYH,MAAZ;AACD;AACF;;AAED,SAAO;AACLI,IAAAA,GAAG,EAAE,MAAMN,YAAY,CAACQ,IAAb,CAAkB,MAAMb,KAAK,CAACE,QAAZ,GAAuB,GAAzC,CAAN,GAAsD,GADtD;AAELE,IAAAA;AAFK,GAAP;AAID,C","sourcesContent":["// @flow\n\nimport type {\n  BooleanExpressionTokenType,\n  SqlFragmentType\n} from '../types';\nimport {\n  isSqlToken\n} from '../utilities';\nimport {\n  createSqlTokenSqlFragment\n} from '../factories';\nimport {\n  UnexpectedStateError\n} from '../errors';\n\nexport default (token: BooleanExpressionTokenType, greatestParameterPosition: number): SqlFragmentType => {\n  if (token.operator !== 'AND' && token.operator !== 'OR') {\n    throw new UnexpectedStateError('Invalid operator.');\n  }\n\n  const values = [];\n  const placeholders = [];\n\n  let placeholderIndex = greatestParameterPosition;\n\n  for (const member of token.members) {\n    if (isSqlToken(member)) {\n      // $FlowFixMe\n      const sqlFragment = createSqlTokenSqlFragment(member, placeholderIndex);\n\n      placeholders.push(sqlFragment.sql);\n      placeholderIndex += sqlFragment.values.length;\n\n      values.push(...sqlFragment.values);\n    } else {\n      placeholders.push('$' + ++placeholderIndex);\n\n      // $FlowFixMe\n      values.push(member);\n    }\n  }\n\n  return {\n    sql: '(' + placeholders.join(' ' + token.operator + ' ') + ')',\n    values\n  };\n};\n"],"file":"createBooleanExpressionSqlFragment.js"}