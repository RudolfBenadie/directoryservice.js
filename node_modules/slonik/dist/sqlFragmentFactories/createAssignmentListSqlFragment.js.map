{"version":3,"sources":["../../src/sqlFragmentFactories/createAssignmentListSqlFragment.js"],"names":["token","greatestParameterPosition","placeholderIndex","values","sql","Object","entries","namedAssignment","map","column","value","sqlFragment","length","push","join"],"mappings":";;;;;;;AAEA;;AAOA;;AAIA;;yCAIgBA,K,EAAgCC,yB,KAAuD;AACrG,MAAIC,gBAAgB,GAAGD,yBAAvB;AAEA,QAAME,MAAM,GAAG,EAAf;AAEA,QAAMC,GAAG,GAAGC,MAAM,CACfC,OADS,CACDN,KAAK,CAACO,eADL,EAETC,GAFS,CAEL,CAAC,CAACC,MAAD,EAASC,KAAT,CAAD,KAAqB;AACxB,QAAI,2BAAWA,KAAX,CAAJ,EAAuB;AACrB;AACA,YAAMC,WAAW,GAAG,0CAA0BD,KAA1B,EAAiCR,gBAAjC,CAApB;AAEAA,MAAAA,gBAAgB,IAAIS,WAAW,CAACR,MAAZ,CAAmBS,MAAvC;AAEAT,MAAAA,MAAM,CAACU,IAAP,CAAY,GAAGF,WAAW,CAACR,MAA3B;AAEA,aAAO,iCAAiB,uBAAUM,MAAV,CAAjB,IAAsC,KAAtC,GAA8CE,WAAW,CAACP,GAAjE;AACD,KATD,MASO;AACL;AACAD,MAAAA,MAAM,CAACU,IAAP,CAAYH,KAAZ,EAFK,CAIL;AACA;AACA;;AACA,aAAO,iCAAiB,uBAAUD,MAAV,CAAjB,IAAsC,MAAtC,GAA+C,EAAEP,gBAAxD;AACD;AACF,GArBS,EAsBTY,IAtBS,CAsBJ,IAtBI,CAAZ;AAwBA,SAAO;AACLV,IAAAA,GADK;AAELD,IAAAA;AAFK,GAAP;AAID,C","sourcesContent":["// @flow\n\nimport {\n  snakeCase\n} from 'lodash';\nimport type {\n  AssignmentListTokenType,\n  SqlFragmentType\n} from '../types';\nimport {\n  escapeIdentifier,\n  isSqlToken\n} from '../utilities';\nimport {\n  createSqlTokenSqlFragment\n} from '../factories';\n\nexport default (token: AssignmentListTokenType, greatestParameterPosition: number): SqlFragmentType => {\n  let placeholderIndex = greatestParameterPosition;\n\n  const values = [];\n\n  const sql = Object\n    .entries(token.namedAssignment)\n    .map(([column, value]) => {\n      if (isSqlToken(value)) {\n        // $FlowFixMe\n        const sqlFragment = createSqlTokenSqlFragment(value, placeholderIndex);\n\n        placeholderIndex += sqlFragment.values.length;\n\n        values.push(...sqlFragment.values);\n\n        return escapeIdentifier(snakeCase(column)) + ' = ' + sqlFragment.sql;\n      } else {\n        // $FlowFixMe\n        values.push(value);\n\n        // @todo `snakeCase` is opinionated modification assignment expression modification.\n        // Add a way to override the default behaviour, e.g. by allowing AssignmentListTokenType\n        // key to be sql.identifier.\n        return escapeIdentifier(snakeCase(column)) + ' = $' + ++placeholderIndex;\n      }\n    })\n    .join(', ');\n\n  return {\n    sql,\n    values\n  };\n};\n"],"file":"createAssignmentListSqlFragment.js"}