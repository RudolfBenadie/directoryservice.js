"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _errors = require("../errors");

var _utilities = require("../utilities");

var _factories = require("../factories");

const createTupleListSqlFragment = (token, greatestParameterPosition) => {
  const values = [];
  let placeholderIndex = greatestParameterPosition;
  const tupleListMemberSql = [];
  let lastTupleSize;

  for (const tuple of token.tuples) {
    const placeholders = [];

    if (tuple.length === 0) {
      throw new _errors.UnexpectedStateError('Tuple must have at least 1 member.');
    }

    if (typeof lastTupleSize === 'number' && lastTupleSize !== tuple.length) {
      throw new _errors.UnexpectedStateError('Each tuple in a list of tuples must have an equal number of members.');
    }

    lastTupleSize = tuple.length;

    for (const member of tuple) {
      if ((0, _utilities.isSqlToken)(member)) {
        // $FlowFixMe
        const sqlFragment = (0, _factories.createSqlTokenSqlFragment)(member, placeholderIndex);
        placeholders.push(sqlFragment.sql);
        placeholderIndex += sqlFragment.values.length;
        values.push(...sqlFragment.values);
      } else {
        placeholders.push('$' + ++placeholderIndex);
        values.push(member);
      }
    }

    tupleListMemberSql.push('(' + placeholders.join(', ') + ')');
  }

  const sql = tupleListMemberSql.join(', ');
  return {
    sql,
    values: (0, _factories.createPrimitiveValueExpressions)(values)
  };
};

var _default = createTupleListSqlFragment;
exports.default = _default;
//# sourceMappingURL=createTupleListSqlFragment.js.map