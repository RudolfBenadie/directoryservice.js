{"version":3,"sources":["../../src/sqlFragmentFactories/createValueListSqlFragment.js"],"names":["token","greatestParameterPosition","values","placeholders","placeholderIndex","length","UnexpectedStateError","listValue","sqlFragment","push","sql","join"],"mappings":";;;;;;;AAMA;;AAGA;;AAGA;;oCAKgBA,K,EAA8BC,yB,KAAuD;AACnG,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,YAAY,GAAG,EAArB;AAEA,MAAIC,gBAAgB,GAAGH,yBAAvB;;AAEA,MAAID,KAAK,CAACE,MAAN,CAAaG,MAAb,KAAwB,CAA5B,EAA+B;AAC7B,UAAM,IAAIC,4BAAJ,CAAyB,yCAAzB,CAAN;AACD;;AAED,OAAK,MAAMC,SAAX,IAAwBP,KAAK,CAACE,MAA9B,EAAsC;AACpC,QAAI,2BAAWK,SAAX,CAAJ,EAA2B;AACzB;AACA,YAAMC,WAAW,GAAG,0CAA0BD,SAA1B,EAAqCH,gBAArC,CAApB;AAEAD,MAAAA,YAAY,CAACM,IAAb,CAAkBD,WAAW,CAACE,GAA9B;AACAN,MAAAA,gBAAgB,IAAII,WAAW,CAACN,MAAZ,CAAmBG,MAAvC;AACAH,MAAAA,MAAM,CAACO,IAAP,CAAY,GAAGD,WAAW,CAACN,MAA3B;AACD,KAPD,MAOO;AACLC,MAAAA,YAAY,CAACM,IAAb,CAAkB,MAAM,EAAEL,gBAA1B;AAEAF,MAAAA,MAAM,CAACO,IAAP,CAAYF,SAAZ;AACD;AACF;;AAED,SAAO;AACLG,IAAAA,GAAG,EAAEP,YAAY,CAACQ,IAAb,CAAkB,IAAlB,CADA;AAELT,IAAAA,MAAM,EAAE,gDAAgCA,MAAhC;AAFH,GAAP;AAID,C","sourcesContent":["// @flow\n\nimport type {\n  SqlFragmentType,\n  ValueListSqlTokenType\n} from '../types';\nimport {\n  UnexpectedStateError\n} from '../errors';\nimport {\n  isSqlToken\n} from '../utilities';\nimport {\n  createPrimitiveValueExpressions,\n  createSqlTokenSqlFragment\n} from '../factories';\n\nexport default (token: ValueListSqlTokenType, greatestParameterPosition: number): SqlFragmentType => {\n  const values = [];\n  const placeholders = [];\n\n  let placeholderIndex = greatestParameterPosition;\n\n  if (token.values.length === 0) {\n    throw new UnexpectedStateError('Value list must have at least 1 member.');\n  }\n\n  for (const listValue of token.values) {\n    if (isSqlToken(listValue)) {\n      // $FlowFixMe\n      const sqlFragment = createSqlTokenSqlFragment(listValue, placeholderIndex);\n\n      placeholders.push(sqlFragment.sql);\n      placeholderIndex += sqlFragment.values.length;\n      values.push(...sqlFragment.values);\n    } else {\n      placeholders.push('$' + ++placeholderIndex);\n\n      values.push(listValue);\n    }\n  }\n\n  return {\n    sql: placeholders.join(', '),\n    values: createPrimitiveValueExpressions(values)\n  };\n};\n"],"file":"createValueListSqlFragment.js"}