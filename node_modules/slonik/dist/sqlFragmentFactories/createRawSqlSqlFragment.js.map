{"version":3,"sources":["../../src/sqlFragmentFactories/createRawSqlSqlFragment.js"],"names":["token","greatestParameterPosition","Array","isArray","values","sql"],"mappings":";;;;;;;AAMA;;iCAKgBA,K,EAAwBC,yB,KAAuD;AAC7F,MAAIC,KAAK,CAACC,OAAN,CAAcH,KAAK,CAACI,MAApB,CAAJ,EAAiC;AAC/B,WAAO,yDAAyCJ,KAAK,CAACK,GAA/C,EAAoDL,KAAK,CAACI,MAA1D,EAAkEH,yBAAlE,CAAP;AACD,GAFD,MAEO;AACL;AACA,WAAO,oDAAoCD,KAAK,CAACK,GAA1C,EAA+CL,KAAK,CAACI,MAArD,EAA6DH,yBAA7D,CAAP;AACD;AACF,C","sourcesContent":["// @flow\n\nimport type {\n  RawSqlTokenType,\n  SqlFragmentType\n} from '../types';\nimport {\n  interpolatePositionalParameterReferences,\n  interpolateNamedParameterReferences\n} from '../utilities';\n\nexport default (token: RawSqlTokenType, greatestParameterPosition: number): SqlFragmentType => {\n  if (Array.isArray(token.values)) {\n    return interpolatePositionalParameterReferences(token.sql, token.values, greatestParameterPosition);\n  } else {\n    // $FlowFixMe\n    return interpolateNamedParameterReferences(token.sql, token.values, greatestParameterPosition);\n  }\n};\n"],"file":"createRawSqlSqlFragment.js"}