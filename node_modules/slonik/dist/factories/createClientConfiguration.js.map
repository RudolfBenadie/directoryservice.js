{"version":3,"sources":["../../src/factories/createClientConfiguration.js"],"names":["clientUserConfiguration","typeParsers","configuration","captureStackTrace","connectionTimeout","idleTimeout","interceptors","maximumPoolSize","minimumPoolSize"],"mappings":";;;;;;;AAOA;;;;kCAEgBA,uB,IAAmF;AACjG,QAAMC,WAA2C,GAAG,EAApD;AACA,QAAMC,aAAa,GAAG;AACpBC,IAAAA,iBAAiB,EAAE,IADC;AAEpBC,IAAAA,iBAAiB,EAAE,IAFC;AAGpBC,IAAAA,WAAW,EAAE,IAHO;AAKpB;AACAC,IAAAA,YAAY,EAAE,EANM;AAQpBC,IAAAA,eAAe,EAAE,EARG;AASpBC,IAAAA,eAAe,EAAE,CATG;AAWpBP,IAAAA,WAXoB;AAYpB,OAAGD;AAZiB,GAAtB;;AAeA,MAAI,CAACE,aAAa,CAACD,WAAf,IAA8BC,aAAa,CAACD,WAAd,KAA8BA,WAAhE,EAA6E;AAC3E;AACAC,IAAAA,aAAa,CAACD,WAAd,GAA4B,sCAA5B;AACD;;AAED,SAAOC,aAAP;AACD,C","sourcesContent":["// @flow\n\nimport type {\n  ClientConfigurationType,\n  ClientUserConfigurationType,\n  TypeParserType\n} from '../types';\nimport createTypeParserPreset from './createTypeParserPreset';\n\nexport default (clientUserConfiguration?: ClientUserConfigurationType): ClientConfigurationType => {\n  const typeParsers: $ReadOnlyArray<TypeParserType> = [];\n  const configuration = {\n    captureStackTrace: true,\n    connectionTimeout: 5000,\n    idleTimeout: 5000,\n\n    // $FlowFixMe\n    interceptors: [],\n\n    maximumPoolSize: 10,\n    minimumPoolSize: 0,\n\n    typeParsers,\n    ...clientUserConfiguration\n  };\n\n  if (!configuration.typeParsers || configuration.typeParsers === typeParsers) {\n    // $FlowFixMe\n    configuration.typeParsers = createTypeParserPreset();\n  }\n\n  return configuration;\n};\n"],"file":"createClientConfiguration.js"}